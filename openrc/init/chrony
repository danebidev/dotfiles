#!/usr/bin/openrc-run

command="/usr/bin/chronyd"
description="NTP daemon"
pidfile="/run/chrony/chronyd.pid"

depend() {
	need net
	after firewall
	provide ntp-client ntp-server
	use dns
}

checkconfig() {
	# Note that /etc/chrony/chrony.keys is *NOT* checked. This
	# is because the user may have specified another key
	# file, and we don't want to force the user to use that
	# exact name for the key file.
	if [ ! -f "${CFGFILE}" ] ; then
		eerror "Please create ${CFGFILE} and the"
		eerror "chrony key file (usually /etc/chrony/chrony.keys)"
		eerror "by using the"
		eerror ""
		eerror "        chrony.conf.example"
		eerror "        chrony.keys.example"
		eerror ""
		eerror "files (from the documentation directory)"
		eerror "as templates."
		return 1
	else
		# Actually, I tried it, and chrony seems to ignore the pidfile
		# option. I'm going to leave it here anyway, since you never
		# know if it might be handy
		_cfg_pidfile=`awk '/^ *pidfile/{print $2}' "${CFGFILE}"`
		if [ -n "$_cfg_pidfile" ] ; then
			pidfile="$_cfg_pidfile"
		fi
	fi
	return 0
}

setxtrarg() {
	if [ -c /dev/rtc ]; then
		grep -q '^rtcfile' "${CFGFILE}" && ARGS="${ARGS} -s"
	fi
	grep -q '^dumponexit$' "${CFGFILE}" && ARGS="${ARGS} -r"
	return 0
}

start() {
	checkconfig || return $?
	setxtrarg

	local daemon_args=
	if yesno "$FAST_STARTUP"; then
		ARGS="${ARGS} -n"
		daemon_args="--background"
	fi

	ebegin "Starting chronyd"
	start-stop-daemon $daemon_args --start --quiet \
		--exec "${command}" \
		--pidfile "${pidfile}" \
		-- -f "${CFGFILE}" ${ARGS}
	eend $? "Failed to start chronyd"
}

stop() {
	checkconfig || return $?

	ebegin "Stopping chronyd"
	start-stop-daemon --stop --quiet \
		--pidfile "${pidfile}"
	eend $? "Failed to stop chronyd"
}
