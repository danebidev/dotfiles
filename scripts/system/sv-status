#!/bin/bash

set -e

scandir=/run/service

die() { printf '%s\n' "$1"; exit 1; }
  
seconds_to_delta() {
    s="$1"
    printf '%dh %02dm %02ds' "$(( s / 3600 ))" "$(( s % 3600 / 60 ))" "$(( s % 60 ))"
}

main() {
    if [ ! -n "$1" ]; then
        die 'Usage: s6-status [--user] <service>'
    fi

    local user_service=0
    if [ "$1" = "--user" ]; then
        user_service=1
        scandir=/run/"$(id -u)"/service
        service="$2"
        shift
    else
        service="$1"
    fi

    IFS=' ' read -r up wantedup normallyup ready paused pid pgid exitcode signal signum updownsince readysince updownfor readyfor < <(s6-svstat -o up,wantedup,normallyup,ready,paused,pid,pgid,exitcode,signal,signum,updownsince,readysince,updownfor,readyfor "${scandir}"/"${service}")
    [ -e "${scandir}"/"${service}"/data/description ] && description="$(cat "${scandir}"/"${service}"/data/description)"

    printf '\033[1mService:\t%s - %s\033[0m\n' "$service" "${description:-no description}"

    printf 'Status:\t\t'
    [ "$up" = 'true' ] && printf '\033[1;32mup\033[0m ' || printf '\033[1;31mdown\033[0m '
    [ "$ready" = 'true' ] && printf '(ready), ' || printf '(not ready), '
    printf 'wanted up: '
    [ "$wantedup" = 'true' ] && printf 'yes, ' || printf 'no, '
    printf 'normally up: '
    [ "$normallyup" = 'true' ] && printf 'yes' || printf 'no'
    printf '\n'

    if [ ! "$pid" = -1 ]; then
        printf 'PID/PGID:\t%s/%s (%s)\n' "$pid" "$pgid" "$(ps -o args --no-headers "$pid")"
    fi
    if [ ! "$exitcode" = -1 ]; then
        printf 'Exitcode:\t%s\n' "$exitcode"
    fi
    if [ ! "$signal" = 'NA' ]; then
        printf 'Signal:\t\t%s(%s)\n' "$signal" "$signum"
    fi

    [ "$up" = 'true' ] && printf 'Up ' || printf 'Down '
    printf 'since:\t%s (%s ago)\n' \
    "$(s6-tai64nlocal <<<"$updownsince")" "$(seconds_to_delta "$updownfor")"
    printf 'Ready since:\t%s (%s ago)\n' \
    "$(s6-tai64nlocal <<<"$readysince")" "$(seconds_to_delta "$readyfor")"

    if [ ! "$pid" = -1 ]; then
        printf '\n'
        pstree -pT -H "$pid" "$pid"
    fi

    nlines=10
    logfile=/var/log/s6/"${service}"/current
    if [ "$user_service" = 1 ]; then
        logfile=~/.local/share/s6/log/"${service}"/current
    fi

    printf '\n'
    if [ -f "$logfile" ]; then
        printf '\033[1mLast %s lines from %s:\033[0m\n' "$nlines" "$logfile"
        tail -n"$nlines" "$logfile" | s6-tai64nlocal
    else
        printf '\033[1mFile %s does not exist\033[0m\n' "$logfile"
    fi
}

main "$@" | less --quit-if-one-screen --chop-long-lines --RAW-CONTROL-CHARS --no-init

