diff '--color=auto' -ura s6-2.13.0.0/src/daemontools-extras/s6-log.c s6-2.13.0.0.new/src/daemontools-extras/s6-log.c
--- s6-2.13.0.0/src/daemontools-extras/s6-log.c	2024-05-08 13:46:20.000000000 +0000
+++ s6-2.13.0.0.new/src/daemontools-extras/s6-log.c	2024-07-14 22:55:25.923381268 +0000
@@ -155,8 +155,6 @@
   uint64_t maxdirsize ;
   uint32_t b ;
   uint32_t n ;
-  uint32_t s ;
-  uint32_t tolerance ;
   pid_t pid ;
   char const *dir ;
   char const *processor ;
@@ -174,8 +172,6 @@
   .maxdirsize = 0, \
   .b = 0, \
   .n = 0, \
-  .s = 0, \
-  .tolerance = 0, \
   .pid = 0, \
   .dir = 0, \
   .processor = 0, \
@@ -524,36 +520,24 @@
     return r ;
   }
   ldp->b += r ;
-  if ((ldp->b + ldp->tolerance >= ldp->s) && (s[r-1] == '\n'))
-  {
-    ldp->rstate = ROTSTATE_START ;
-    rotator(ldp) ;
-  }
   return r ;
 }
 
 static inline void rotate_or_flush (logdir_t *ldp)
 {
   if ((ldp->rstate != ROTSTATE_WRITABLE) && !rotator(ldp)) return ;
-  if (ldp->b >= ldp->s)
-  {
-    ldp->rstate = ROTSTATE_START ;
-    if (!rotator(ldp)) return ;
-  }
   bufalloc_flush(&ldp->out) ;
 }
 
-static inline void logdir_init (unsigned int index, uint32_t s, uint32_t n, uint32_t tolerance, uint64_t maxdirsize, tain const *retrytto, char const *processor, char const *name, unsigned int flags)
+static inline void logdir_init (unsigned int index, uint32_t n, uint64_t maxdirsize, tain const *retrytto, char const *processor, char const *name, unsigned int flags)
 {
   logdir_t *ldp = logdirs + index ;
   struct stat st ;
   size_t dirlen = strlen(name) ;
   int r ;
   char x[dirlen + 11] ;
-  ldp->s = s ;
   ldp->n = n ;
   ldp->pid = 0 ;
-  ldp->tolerance = tolerance ;
   ldp->maxdirsize = maxdirsize ;
   ldp->retrytto = *retrytto ;
   ldp->processor = processor ;
@@ -758,9 +742,7 @@
   tain retrytto ;
   unsigned int fd2_size = 200 ;
   unsigned int status_size = 1001 ;
-  uint32_t s = 99999 ;
   uint32_t n = 10 ;
-  uint32_t tolerance = 2000 ;
   uint64_t maxdirsize = 0 ;
   char const *processor = 0 ;
   char const *prefix = 0 ;
@@ -805,19 +787,9 @@
       case 'n' :
         if (!uint320_scan(*argv + 1, &n)) goto fail ;
         break ;
-      case 's' :
-        if (!uint320_scan(*argv + 1, &s)) goto fail ;
-        if (s < 4096) s = 4096 ;
-        if (s > 268435455) s = 268435455 ;
-        break ;
       case 'S' :
         if (!uint640_scan(*argv + 1, &maxdirsize)) goto fail ;
         break ;
-      case 'l' :
-        if (!uint320_scan(*argv + 1, &tolerance)) goto fail ;
-        if (tolerance > (s >> 1))
-          strerr_dief3x(100, "directive ", *argv, " conflicts with previous s directive") ;
-        break ;
       case 'r' :
       {
         uint32_t t ;
@@ -873,7 +845,7 @@
       case '/' :
       {
         act_t a = { .type = ACTTYPE_DIR, .flags = flags, .prefix = prefix, .prefixlen = prefixlen, .data = { .ld = lidx } } ;
-        logdir_init(lidx, s, n, tolerance, maxdirsize, &retrytto, processor, *argv, flags) ;
+        logdir_init(lidx, n, maxdirsize, &retrytto, processor, *argv, flags) ;
         lidx++ ;
         actions[act++] = a ; flagacted = 1 ; flags = 0 ;
         break ;
